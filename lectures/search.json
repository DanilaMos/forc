[
  {
    "objectID": "00_intro/00_introduction.html#instructor",
    "href": "00_intro/00_introduction.html#instructor",
    "title": "Fundamentals of Robot Control",
    "section": "Instructor",
    "text": "Instructor\n\nName: Simeon Nedelchev\nBackground:\n\nMSTU STANKIN (Bachelor/Master in Robotics 2018)\nKorea University of Technology And Education (KoreaTech) (Master ME 2019), Research fellow ‘BioRobotics’ lab\nInnopolis University (PhD), Senior Instructor, Research fellow of robotics lab\nSenior Control Engineer at Sber Robotics Lab (2023-Now)"
  },
  {
    "objectID": "00_intro/00_introduction.html#research-interests",
    "href": "00_intro/00_introduction.html#research-interests",
    "title": "Fundamentals of Robot Control",
    "section": "Research Interests",
    "text": "Research Interests\n\nControl: Nonlinear, Robust, Adaptive, Energy based, Noncolocated and Underactuated, with focus on discrete-time and physically inspired numerical methods.\nOnline Identification and Estimation: Moving Horizon Estimators, Sliding Mode Observers.\nAnalytical Mechanics and Dynamical Systems: Dynamical Modeling, Limit Cycles, Constrained Dynamics (UK), Computational mechanics.\nApplied Optimization: Linear, Quadratic, and Nonlinear programming, Dynamical programming, Optimal Control, Optimal Mechanical Design.\n\n\nFeel free to contact me via telegram and mail if you face any problems with the course or would like to do research and work on hardware"
  },
  {
    "objectID": "00_intro/00_introduction.html#what-this-course-is-about",
    "href": "00_intro/00_introduction.html#what-this-course-is-about",
    "title": "Fundamentals of Robot Control",
    "section": "What this course is about?",
    "text": "What this course is about?\nThis is an introductory course dedicated to control over robotic systems (mainly fully actuated). You will learn:\n\nRecall of modeling techniques, simulators (MuJoCo)\nAnalysis of linear and nonlinear systems\nLinear control (PD, PID, pole placement, etc.)\nBasics of nonlinear control (Feedback linearization, gravity compensation etc.)\nIntro to advanced control techniques (optimal and adaptive control, model predictive, etc.)"
  },
  {
    "objectID": "00_intro/00_introduction.html#course-organization",
    "href": "00_intro/00_introduction.html#course-organization",
    "title": "Fundamentals of Robot Control",
    "section": "Course Organization",
    "text": "Course Organization\n\nOnline lectures\nPractice/lab sessions\n\nImplementing concepts in Python\nInteractive sessions in Google Colab\n\nHand-written notes encouraged\nMidterm and final exams"
  },
  {
    "objectID": "00_intro/00_introduction.html#grading-policy",
    "href": "00_intro/00_introduction.html#grading-policy",
    "title": "Fundamentals of Robot Control",
    "section": "Grading Policy",
    "text": "Grading Policy\n\n\n\nComponent\nWeight\n\n\n\n\nMidterm\n30%\n\n\nFinal Exam\n30%\n\n\nAssignments\n20%\n\n\nAttendance*\n20%\n\n\n\n\n\nPlagiarism results in zero score\nContact instructor or TA for questions\nAttendance includes presence and active participation\nGrade thresholds: &gt;55% = C; &gt;70% = B; &gt;85% = A"
  },
  {
    "objectID": "00_intro/00_introduction.html#course-structure",
    "href": "00_intro/00_introduction.html#course-structure",
    "title": "Fundamentals of Robot Control",
    "section": "Course Structure",
    "text": "Course Structure\n\nIntroduction and Modeling (week 1)\nAnalysis and Control of Linear Systems (weeks 2-3)\nMid-term exam (week 4)\nAnalysis and Control over Nonlinear Systems (weeks 5-7)\nOther topics (week 8)\nFinal exam"
  },
  {
    "objectID": "00_intro/00_introduction.html#prerequisites",
    "href": "00_intro/00_introduction.html#prerequisites",
    "title": "Fundamentals of Robot Control",
    "section": "Prerequisites",
    "text": "Prerequisites\nRequired:\n\nLinear algebra\nDifferential Equations\n\nHelpful:\n\nIntroduction to Robotics (or similar)\nControl Theory (Linear Control)\n\n\nSolid knowledge of vector and matrix operations is required, as well as that of mechanics (kinematics, dynamics, concept of mechanical energy)."
  },
  {
    "objectID": "00_intro/00_introduction.html#references",
    "href": "00_intro/00_introduction.html#references",
    "title": "Fundamentals of Robot Control",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "00_intro/00_introduction.html#online-materials",
    "href": "00_intro/00_introduction.html#online-materials",
    "title": "Fundamentals of Robot Control",
    "section": "Online Materials",
    "text": "Online Materials\n\nControl Bootcamp - YouTube playlist on linear and nonlinear control concepts\nSlotine control course - Favorite course on nonlinear control\nUnderactuated Robotics - MIT course on numerical methods in control"
  },
  {
    "objectID": "00_intro/00_introduction.html#course-outcomes",
    "href": "00_intro/00_introduction.html#course-outcomes",
    "title": "Fundamentals of Robot Control",
    "section": "Course Outcomes",
    "text": "Course Outcomes\nBy the end of the course, you will know:\n\nThe structure of models (differential equations) that are used to describe robotic systems\nThe main sources of nonlinearities in robotic systems\nThe purpose and main blocks of feedback control systems\nHow to perform stability analysis of your robots and controllers\nDifferent control algorithms for motion control of various robots (mainly rigid-body manipulators)"
  },
  {
    "objectID": "00_intro/00_introduction.html#thank-you",
    "href": "00_intro/00_introduction.html#thank-you",
    "title": "Fundamentals of Robot Control",
    "section": "Thank You!",
    "text": "Thank You!\nAny questions?"
  },
  {
    "objectID": "01_modeling/01_modeling.html#introduction",
    "href": "01_modeling/01_modeling.html#introduction",
    "title": "Fundamentals of Robot Control",
    "section": "Introduction",
    "text": "Introduction\n\nThis course focuses on control methods for robots\nOur task: design control algorithms for desired robot behavior\nWe’ll consider behavior even in the presence of disturbances\nToday’s focus: structure of robotic control systems and mathematical modeling"
  },
  {
    "objectID": "01_modeling/01_modeling.html#robotic-control-system-structure",
    "href": "01_modeling/01_modeling.html#robotic-control-system-structure",
    "title": "Fundamentals of Robot Control",
    "section": "Robotic Control System Structure",
    "text": "Robotic Control System Structure"
  },
  {
    "objectID": "01_modeling/01_modeling.html#dynamical-systems",
    "href": "01_modeling/01_modeling.html#dynamical-systems",
    "title": "Fundamentals of Robot Control",
    "section": "Dynamical Systems",
    "text": "Dynamical Systems\nA dynamical system:\n\nBehavior evolves over time\nMay be influenced by external inputs\nCan be SISO or MIMO, continuous-time or discrete-time, causal or non-causal, time-invariant or time-varying, linear or nonlinear\n\nExamples: Electrical circuits, mechanical systems, biological systems, stock market"
  },
  {
    "objectID": "01_modeling/01_modeling.html#mathematical-models",
    "href": "01_modeling/01_modeling.html#mathematical-models",
    "title": "Fundamentals of Robot Control",
    "section": "Mathematical Models",
    "text": "Mathematical Models\n\nAbstraction of the real world\nBased on physical laws (mechanics, electricity, thermodynamics)\nResult in differential equations\nShould be as simple as possible, but no simpler"
  },
  {
    "objectID": "01_modeling/01_modeling.html#differential-equations",
    "href": "01_modeling/01_modeling.html#differential-equations",
    "title": "Fundamentals of Robot Control",
    "section": "Differential Equations",
    "text": "Differential Equations\n\nRelate unknown functions and their derivatives\nDescribe rates of change of physical quantities\nOrdinary Differential Equations (ODE) used in this course\nGeneral form: \\(\\mathbf{F}(x,z,z',\\ldots ,z^{(n-1)},z^{(n)})=0\\)"
  },
  {
    "objectID": "01_modeling/01_modeling.html#state-space-models",
    "href": "01_modeling/01_modeling.html#state-space-models",
    "title": "Fundamentals of Robot Control",
    "section": "State-Space Models",
    "text": "State-Space Models\nBased on the concept of system state: - Smallest set of variables that determine system behavior - State-space: n-dimensional space of state variables - Represented as system of first-order differential equations"
  },
  {
    "objectID": "01_modeling/01_modeling.html#linear-systems",
    "href": "01_modeling/01_modeling.html#linear-systems",
    "title": "Fundamentals of Robot Control",
    "section": "Linear Systems",
    "text": "Linear Systems\nGeneral form:\n\\[\n\\begin{matrix}\n    \\dot{\\mathbf{x}} = \\mathbf{A}(t) \\mathbf{x} + \\mathbf{B}(t) \\mathbf{u}\\\\\n    \\mathbf{y}=\\mathbf{C}(t)\\mathbf{x} + \\mathbf{D}(t)\\mathbf{u}\n\\end{matrix}\n\\]\nWhere \\(\\mathbf{x}\\), \\(\\mathbf{y}\\), \\(\\mathbf{u}\\) are state, output, and input vectors respectively.\n\n\nUnique equilibrium point if \\(\\mathbf{A}\\) is full rank\nStability determined by eigenvalues of \\(\\mathbf{A}\\)\nAnalytical solution possible\nSatisfies principle of superposition\nSinusoidal input leads to sinusoidal output of same frequency"
  },
  {
    "objectID": "01_modeling/01_modeling.html#example-mass-spring-damper",
    "href": "01_modeling/01_modeling.html#example-mass-spring-damper",
    "title": "Fundamentals of Robot Control",
    "section": "Example: Mass-Spring-Damper",
    "text": "Example: Mass-Spring-Damper\n\n\nState-space form: \\[\n\\dot{\\mathbf{x}} = \\mathbf{A}\\mathbf{x} =\n\\begin{bmatrix}\n0 & 1\\\\\n-\\frac{k}{m} & -\\frac{b}{m}\n\\end{bmatrix}\n\\begin{bmatrix}\ny\\\\\n\\dot{y}\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "01_modeling/01_modeling.html#nonlinear-systems",
    "href": "01_modeling/01_modeling.html#nonlinear-systems",
    "title": "Fundamentals of Robot Control",
    "section": "Nonlinear Systems",
    "text": "Nonlinear Systems\nGeneral form:\n\\[\n\\begin{matrix}\n    \\dot{\\mathbf{x}} = \\mathbf{f}(\\mathbf{x},\\mathbf{u},\\mathbf{d}, t) \\\\\n    \\mathbf{y}=\\mathbf{h}(\\mathbf{x},\\mathbf{u},\\mathbf{d}, t)\n\\end{matrix}\n\\]\nProperties:\n\n\nMultiple equilibrium points possible\nStability analysis more complex\nAnalytical solution generally not possible\nDoesn’t satisfy principle of superposition"
  },
  {
    "objectID": "01_modeling/01_modeling.html#example-nonlinear-pendulum",
    "href": "01_modeling/01_modeling.html#example-nonlinear-pendulum",
    "title": "Fundamentals of Robot Control",
    "section": "Example: Nonlinear Pendulum",
    "text": "Example: Nonlinear Pendulum\n\n\nState-space form:\n\\[\n\\dot{\\mathbf{x}} =\n\\begin{bmatrix}\nx_2 \\\\\n\\frac{1}{m L^2 + I}(u - mgL \\sin x_1-b x_2)\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "01_modeling/01_modeling.html#generalized-mechanical-system",
    "href": "01_modeling/01_modeling.html#generalized-mechanical-system",
    "title": "Fundamentals of Robot Control",
    "section": "Generalized Mechanical System",
    "text": "Generalized Mechanical System\nGeneral form:\n\\[\n\\mathbf{M}(\\mathbf{q})\\ddot{\\mathbf{q}} + \\mathbf{h}(\\mathbf{q},\\dot{\\mathbf{q}}) + \\mathbf{d}(\\mathbf{q},\\dot{\\mathbf{q}},t) = \\mathbf{Q} = \\mathbf{B}(\\mathbf{q})\\mathbf{u}\n\\]\n\nState-space form:\n\\[\n\\dot{\\mathbf{x}}=\n\\begin{bmatrix}\n\\mathbf{x}_2 \\\\\n\\mathbf{M}^{-1}(\\mathbf{x}_1) \\big(\\mathbf{B}(\\mathbf{x}_1)\\mathbf{u} - \\mathbf{d}(\\mathbf{x}_1, \\mathbf{x}_2,t) -  \\mathbf{h}(\\mathbf{x}_1, \\mathbf{x}_2) \\big)\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "01_modeling/01_modeling.html#example-floating-rigid-body",
    "href": "01_modeling/01_modeling.html#example-floating-rigid-body",
    "title": "Fundamentals of Robot Control",
    "section": "Example: Floating Rigid Body",
    "text": "Example: Floating Rigid Body\n\n\n\\[\n\\mathbf{M}(\\mathbf{q}) =\n\\begin{bmatrix}\nmI & 0 \\\\\n0 & \\mathcal{I}\\\\\n\\end{bmatrix}, \\quad\n\\mathbf{h}(\\mathbf{q},\\dot{\\mathbf{q}}) =\n\\begin{bmatrix}\nmg \\\\\n\\boldsymbol{\\omega} \\times  \\mathcal{I}\\boldsymbol{\\omega}\\\\\n\\end{bmatrix}, \\quad \\mathbf{B} = \\mathbf{I}\n\\]"
  },
  {
    "objectID": "01_modeling/01_modeling.html#simulation-of-ode",
    "href": "01_modeling/01_modeling.html#simulation-of-ode",
    "title": "Fundamentals of Robot Control",
    "section": "Simulation of ODE",
    "text": "Simulation of ODE\n\nGoal: Find solution \\(\\mathbf{x}(t)\\) to \\(\\dot{\\mathbf{x}} = \\boldsymbol{f}(\\mathbf{x}, \\mathbf{u}, t)\\)\nAnalytical solution often not possible\nUse numerical integration: \\(\\mathbf{x}_{k+1} = \\mathbf{f}_d(\\mathbf{x}_k,\\mathbf{u}_k,\\mathbf{d}_k, k)\\)\nSimulation is iteration over discrete dynamics"
  },
  {
    "objectID": "01_modeling/01_modeling.html#simulation-example-nonlinear-pendulum",
    "href": "01_modeling/01_modeling.html#simulation-example-nonlinear-pendulum",
    "title": "Fundamentals of Robot Control",
    "section": "Simulation Example: Nonlinear Pendulum",
    "text": "Simulation Example: Nonlinear Pendulum\nimport numpy as np\nfrom scipy.integrate import odeint\n\ndef f(state, t, control):\n    u = control \n    x1, x2 = state \n    dx1 = x2 \n    dx2 = u - np.sin(x1) - 0*x2\n    return np.array([dx1, dx2])\n\n# Simulation parameters\nx_0 = np.array([1,0])\nT = 2E-2\ntf = 10\nN = int(tf/T)\n\n# Simulation loop\nX = []\nx_prev = x_0\nfor k in range(N):\n    X.append(x_prev)\n    t_k = np.linspace(k*T, (k+1)*T, 5)\n    u_k = 0\n    x_new = odeint(f, x_prev, t_k, args=(u_k,))\n    x_prev = x_new[-1,:] \n\nx_sol = np.array(X)"
  },
  {
    "objectID": "01_modeling/01_modeling.html#conclusion",
    "href": "01_modeling/01_modeling.html#conclusion",
    "title": "Fundamentals of Robot Control",
    "section": "Conclusion",
    "text": "Conclusion\n\nIntroduced dynamical systems and mathematical modeling\nCovered linear and nonlinear systems\nPresented state-space representation\nDemonstrated simulation of ODEs\n\nNext: We’ll dive deeper into analysis and control of linear systems"
  }
]